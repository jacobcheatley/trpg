VOID:
    DISPLAY:
        show_message(message: Str)

    STATS:
        inc_stat(stat: Str, amount: Num)
        dec_stat(stat: Str, amount: Num)
        set_stat(stat: Str, amount: Num)

        inc_res(stat: Str, amount: Num)
        dec_res(stat: Str, amount: Num)
        set_res(stat: Str, amount: Num)
        inc_res_min(stat: Str, amount: Num)
        dec_res_min(stat: Str, amount: Num)
        set_res_min(stat: Str, amount: Num)
        inc_res_max(stat: Str, amount: Num)
        dec_res_max(stat: Str, amount: Num)
        set_res_max(stat: Str, amount: Num)

        inc_health(amount: Num)
        dec_health(amount: Num)
        set_health(amount: Num)
        inc_health_min(amount: Num)
        dec_health_min(amount: Num)
        set_health_min(amount: Num)
        inc_health_max(amount: Num)
        dec_health_max(amount: Num)
        set_health_max(amount: Num)

        * inc and dec might not be needed. Can just set

    GLOBALS:
        set_global(variable_name: Str, value: Any)

    SCENARIOS:
        goto(scenario_name: Str)

    ITEMS:
        give_item(item_name: Str, count: Num)
        take_item(item_name: Str, count: Num)

        give_currency(count: Num)
        take_current(count: Num)

    BUFFS:
        add_buff(buff_name: Str)
        remove_buff(buff_name: Str)

        add_perk(perk_name: Str)
        remove_perk(perk_name: Str)

    COMBAT:
        damage_target(amount: Num)
        damage_all(amount: Num)

RETURN:
    STATS:
        get_stat(stat: Str) -> Num

        get_res(stat: Str) -> Num
        get_res_min(stat: Str) -> Num
        get_res_max(stat: Str) -> Num

        get_health() -> Num
        get_health_min() -> Num
        get_health_max() -> Num

    GLOBALS:
        get_global(variable_name: Str) -> Any

    SCENARIOS:
        get_scenario() -> Str

    ITEMS:
        item_count(item_name: Str) -> Num
        has_item(item_name: Str) -> Bool

        is_equipped(item_name: Str, item_slot: Str) -> Bool
        in_slot(item_slot) -> Str

    BUFFS:
        has_buff(buff_name: Str) -> Bool

        has_perk(perk_name: Str) -> Bool

    COMPARISON:
        gt(a: Num, b: Num) -> Bool
        lt(a: Num, b: Num) -> Bool

        gte(a: Num, b: Num) -> Bool
        lte(a: Num, b: Num) -> Bool

        eq(a: Num, b: Num) -> Bool
        ne(a: Num, b: Num) -> Bool

    BOOLEAN:
        xor(a: Bool, b: Bool) -> Bool
        nor(a: Bool, b: Bool) -> Bool

        and(a: Bool, b: Bool) -> Bool
        nand(a: Bool, b: Bool) -> Bool

        not(a: Bool) -> Bool

    MATH:
        +(a: Num, b: Num) -> Num
        -(a: Num, b: Num) -> Num
        *(a: Num, b: Num) -> Num
        /(a: Num, b: Num) -> Num
        %(a: Num, b: Num) -> Num

    SOMETHING:
        if_val(condition: Bool, if_true: Any, if_false: Any) -> Any

FUNC:
    SOMETHING:
        if_func(condition: Bool, if_true: Func, if_false: Func) -> Func
